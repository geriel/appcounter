{
  "name": "grunt-remote",
  "description": "Grunt task for remote reverse proxy",
  "version": "0.1.1",
  "homepage": "https://github.com/gadr/grunt-remote",
  "author": {
    "name": "Guilherme Rodrigues",
    "email": "gadr90@gmail.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/gadr/grunt-remote.git"
  },
  "bugs": {
    "url": "https://github.com/gadr/grunt-remote/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/gadr/grunt-remote/blob/master/LICENSE-MIT"
    }
  ],
  "main": "Gruntfile.js",
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "devDependencies": {
    "grunt": "~0.4.1"
  },
  "dependencies": {
    "remote": "~0.2.6"
  },
  "peerDependencies": {
    "grunt": "~0.4.1"
  },
  "keywords": [
    "gruntplugin"
  ],
  "readme": "# grunt-remote\n\n> Grunt task for [Remote](https://github.com/gadr/remote) reverse proxy\n\n## Getting Started\nThis plugin requires Grunt `~0.4.1`\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-remote --save-dev\n```\n\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-remote');\n```\n\n## The \"remote\" task\n\n### Overview\nIn your project's Gruntfile, add a section named `remote` to the data object passed into `grunt.initConfig()`.\n\n```js\ngrunt.initConfig({\n  remote: {\n    options: {\n      // Task-specific options go here.\n    },\n    your_target: {\n      // Target-specific file lists and/or options go here.\n    },\n  },\n})\n```\n\n### Options\n\nSee [Remote](https://github.com/gadr/remote) options.\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\n\n## Release History\n_(Nothing yet)_\n",
  "readmeFilename": "README.md",
  "_id": "grunt-remote@0.1.1",
  "_from": "grunt-remote@~0.1.1"
}
